#!/bin/bash

# check OS, establish filePaths
    OS=$(uname)
    if [[ $OS == "Darwin" ]]; then
        scriptPath="~/Documents/Github/IGScripts/"
        workingPath="/Volumes/Storage Consolidation/Design Primary/_PRODUCTS/_Working/"
        uploadsPath="/Volumes/Storage Consolidation/Design Primary/_PRODUCTS/_Uploads/"
    elif [[ $OS == "Linux" ]]; then
        scriptPath="/mnt/c/Users/jere.baker/Documents/GitHub/IG_Scripts/"
        workingPath="/mnt/q/Design Primary/_PRODUCTS/_Working/"
        uploadsPath="/mnt/q/Design Primary/_PRODUCTS/_Uploads/"
    else
        echo "Not able to detect Operating System"
        exit
    fi

    if [[ ! -d "${workingPath}" ]]; then
        echo "Server not connected"
        exit
    fi
#

# pick active project, move to directory
    cd "$workingPath"
    projNum=1
    echo "Available Projects: "
    for i in *; do
        projOptions+=("$i")
        echo "${projNum}. $i"
        projNum=$(($projNum + 1))
    done
    echo

    read -p "Which project? (type the number and hit enter) " pickProj
    if [[ "$pickProj" -gt -1 ]] && [[ "$pickProj" -le "${#projOptions[@]}" ]] && [[ "$pickProj" =~ ^[0-9]+$ ]]; then
        workingPath="${projOptions[(($pickProj-1))]}"
        projName=${projOptions[(($pickProj-1))]%"_MASTER"}
    else
        clear
        echo
        echo "Invalid Input. Try again"
        echo
        exit
    fi

    cd "$workingPath"
    clear
#

# move files to deliverables folder
#

# check file resolutions and naming
    echo $projName
    echo
    lookArray=()
    lookNum=0
    for i in *; do
        if [[ "$i" != *"MOTION"* ]] && [[ "$i" != *"STILL"* ]]; then
            lookArray+=("$i")
            lookNum++
            cd "./$i"
            echo $i
            bash ${scriptPath}checkFiles
            cd ..
        fi
    done
#

echo
read -p "Press enter to continue or CTRL-C to cancel"
echo
echo "Input Frame #s for thumbnails: (leave blank if non-existant)"
read -p "  Titles:            " ttFrame
read -p "  Backgrounds:       " bgFrame
read -p "  Ultra-Wides:       " uwFrame
read -p "  Countdowns:        " cdFrame
read -p "  Trivia:            " tvFrame
read -p "  Bumpers:           " bpFrame
read -p "  Socials:           " scFrame
echo

# make folders in Uploads
    mkdir -p "${uploadsPath}${projName}_MASTER"
    for i in "${lookArray[@]}"; do
        mkdir -p "${uploadsPath}${projName}_MASTER/${i}"
            mkdir -p "${uploadsPath}${projName}_MASTER/${i}/STILLS"
            mkdir -p "${uploadsPath}${projName}_MASTER/${i}/MOTIONS"
    done
#

# copy files to Uploads
    for i in *; do
        if [[ "$i" != *"MOTION"* ]] && [[ "$i" != *"STILL"* ]]; then
            cd "./$i"
            echo "Copying $i to Uploads"
            bash ${scriptPath}copyFiles "$uploadsPath" "$projName" "$i" "$lookNum"
            cd ..
        fi
    done
#

cd "${uploadsPath}${projName}_MASTER"

# motionTitles protocol
    for i in *; do
        if [[ "$i" != *"MOTION"* ]] && [[ "$i" != *"STILL"* ]]; then
            cd "./$i"
            bash ${scriptPath}motionThumbs $ttFrame $bgFrame $uwFrame $cdFrame $tvFrame $bpFrame $scFrame
            cd ..
        fi
    done
#