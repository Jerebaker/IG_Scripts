#!/bin/bash

# check OS, establish filePaths
    OS=$(uname)
    if [[ $OS == "Darwin" ]]; then
        scriptPath="~/Documents/Github/IG_Scripts/"
        workingPath="/Volumes/Storage Consolidation/Design Primary/_PRODUCTS/_Working/"
        uploadsPath="/Volumes/Storage Consolidation/Design Primary/_PRODUCTS/_Uploads/"
    elif [[ $OS == "Linux" ]]; then
        scriptPath="/mnt/c/Users/jere.baker/Documents/GitHub/IG_Scripts/"
        workingPath="/mnt/q/Design Primary/_PRODUCTS/_Working/"
        uploadsPath="/mnt/q/Design Primary/_PRODUCTS/_Uploads/"
    else
        echo "Not able to detect Operating System"
        exit
    fi

    if [[ ! -d "${workingPath}" ]]; then
        echo "Server not connected"
        exit
    fi
#

# pick active project, move to directory
    cd "$workingPath"
    projNum=1
    echo "Available Projects: "
    for i in *; do
        projOptions+=("$i")
        echo "${projNum}. $i"
        projNum=$(($projNum + 1))
    done
    echo

    read -p "Which project? (type the number and hit enter) " pickProj
    if [[ "$pickProj" -gt -1 ]] && [[ "$pickProj" -le "${#projOptions[@]}" ]] && [[ "$pickProj" =~ ^[0-9]+$ ]]; then
        workingPath="${projOptions[(($pickProj-1))]}"
        projName=${projOptions[(($pickProj-1))]%"_MASTER"}
    else
        clear
        echo
        echo "Invalid Input. Try again"
        echo
        exit
    fi

    cd "$workingPath"
    pwd
    #clear
#

# check if there is more than one look variation
    oneLook="FALSE"
    for i in *; do
        if [[ "$i" == *"01_Marketing"* ]]; then
            oneLook="TRUE"
        fi
    done
    echo $oneLook
#

# user inputs go here
    #echo
    #echo "Input Frame #s for thumbnails: (leave blank if non-existant)"
    #read -p "  Titles:            " ttFrame
    #read -p "  Backgrounds:       " bgFrame
    #read -p "  Ultra-Wides:       " uwFrame
    #read -p "  Countdowns:        " cdFrame
    #read -p "  Trivia:            " tvFrame
    #read -p "  Bumpers:           " bpFrame
    #read -p "  Socials:           " scFrame
    #echo
    ttFrame=300
    wbFrame=1
    cdFrame=2680
    bpFrame=838
#

# make folders in Uploads

#

thumbs () {
    for i in *.mov; do
        if [[ "$i" != *"*."* ]]; then
            if  [[ "$i" == *"$2"* ]]; then
                thumbName=${i/mov}jpg
                ffmpeg -loglevel quiet -y -i "$i" -q:v 1 -vf "select=eq(n\,$1)" -vframes 1 "$thumbName"
            fi
        fi
    done
}

# copy functions
    copyMotions () {
        for i in *; do
            if [[ "$i" != *"*"* ]] || [[ "$i" != *".db"* ]]; then
                echo -e "\e[1;37m      $i"
                cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Motions/${1}_$i"
            fi
        done
    }
    compressMotions () {
        for i in *.mov; do
            if [[ "$i" != *"*"* ]] || [[ "$i" != *".db"* ]]; then
                echo -e "\e[1;37m      $i"
                motionPath="${uploadsPath}${projName}_UPLOADS/Motions/${1}_$i"
                ffmpeg -loglevel quiet -y -i "$i" -c:v libx264 -x264-params "nal-hrd=cbr" -b:v 3M -minrate 3M -maxrate 3M -bufsize 5M -c:a aac -b:a 192k -pix_fmt yuv420p "$motionPath" 
            fi
        done
        for i in *.jpg; do
            if [[ "$i" != *"*"* ]] || [[ "$i" != *".db"* ]]; then
                echo -e "\e[1;37m      $i"
                cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Motions/${1}_$i"
            fi
        done
    }
    copyImages () {
        preset=""
        for i in *; do
            if [[ "$i" != *"*"* ]]; then
                if [[ "$i" == *"TT1_"* ]]; then
                    preset="#preset=tg_title1"
                elif [[ "$i" == *"TT2_"* ]]; then
                    preset="#preset=tg_title2"
                elif [[ "$i" == *"TT3_"* ]]; then
                    preset="#preset=tg_title3"
                elif [[ "$i" == *"ALT1_"* ]]; then
                    preset="#preset=tg_alt1"
                elif [[ "$i" == *"ALT2_"* ]]; then
                    preset="#preset=tg_alt2"
                elif [[ "$i" == *"L3_WIDE"* ]]; then
                    preset="#preset=tg_transparent_png_download_wide"
                elif [[ "$i" == *"L3_STD"* ]]; then
                    preset="#preset=tg_transparent_png_download_standard"
                elif [[ "$i" == *"L3_TH_"* ]]; then
                    preset="#preset=tg_transparent_png_preview"
                elif [[ "$i" == *"L3_PV_"* ]]; then
                    preset="#preset=preview_only"
                elif [[ "$i" == *"PP_WIDE"* ]]; then
                    preset="#preset=ppt_wide"
                elif [[ "$i" == *"PP_STD"* ]]; then
                    preset="#preset=ppt_standard"
                elif [[ "$i" == *"_DEMO"* ]]; then
                    preset="#preset=social_psd_demo"
                elif [[ "$i" == *"_OR"* ]]; then
                    preset="#preset=social_orientations"
                elif [[ "$i" == *"BL_LS"* ]]; then
                    preset="#preset=social_landscape2"
                elif [[ "$i" == *"BL_PR"* ]]; then
                    preset="#preset=social_portrait2"
                elif [[ "$i" == *"BL_SQ"* ]]; then
                    preset="#preset=social_square2"
                elif [[ "$i" == *"TP_LS"* ]]; then
                    preset=""
                elif [[ "$i" == *"TP_PR"* ]]; then
                    preset=""
                elif [[ "$i" == *"TP_SQ"* ]]; then
                    preset=""
                elif [[ "$i" == *"_LS"* ]]; then
                    preset="#preset=social_landscape1"
                elif [[ "$i" == *"_PR"* ]]; then
                    preset="#preset=social_portrait1"
                elif [[ "$i" == *"_SQ"* ]]; then
                    preset="#preset=social_square1"
                fi

                if [[ "$i" == *".jpg"* ]]; then
                    echo -e "\e[1;37m      $i"
                    cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Images/${1}_${i%".jpg"}$preset.jpg"
                elif [[ "$i" == *".png"* ]]; then
                    echo -e "\e[1;37m      $i"
                    cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Images/${1}_${i%".png"}$preset.png"
                fi
            fi
        done
    }
    copyPP () {
        for i in *.pptx; do
            if [[ "$i" != *"*"* ]] || [[ "$i" != *".db"* ]]; then
                if [[ "$i" == *"_WIDE"* ]]; then
                    echo -e "\e[1;37m      $i"
                    cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Images/${1}_${i%".pptx"}#preset=ppt_wide.pptx"
                elif [[ "$i" == *"_STD"* ]]; then
                    echo -e "\e[1;37m      $i"
                    cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Images/${1}_${i%".pptx"}#preset=ppt_standard.pptx"
                fi
            fi
        done
    }
    copyPSD () {
        for i in *.psd; do
            if [[ "$i" != *"*"* ]] && [[ "$i" != *".db"* ]] && [[ "$i" != *"_MASTER"* ]]; then
                echo -e "\e[1;37m      $i"
                cp -n "$i" "${uploadsPath}${projName}_UPLOADS/Images/${1}_$i"
            fi
        done
    }
    copyAE () {
        for i in *.ae; do
            if [[ "$i" != *"*"* ]] && [[ "$i" != *".db"* ]] && [[ "$i" != *"_MASTER"* ]]; then
                echo -e "\e[1;37m      $i"
                zip -r "$i" . -i "${uploadsPath}${projName}_UPLOADS/Images/${1}_$i"
            fi
        done
    }
#

# type processors
    titleProcessor () {
        cd "./02_Title"
        for i in */; do
            echo "    Generating Thumbs..."
            cd "./$i/_Motions"
            thumbs $ttFrame "_HD"
            echo "    Copying Motions to Uploads..."
            copyMotions "$1"
            cd ..
            echo "    Copying Images to Uploads..."
            cd "./_Images"
            copyImages "$1"
            cd ..
            echo "    Copying PowerPoints to Uploads..."
            cd "./_PowerPoints"
            copyPP "$1"
            cd ..
            echo "    Copying PSDs to Uploads..."
            copyPSD "$1"
            echo "    Copying AEPs to Uploads..."
            copyAE "$1"
            cd ..
        done
        cd ..
    }
    socialProcessor () {
        cd "./03_Social"
        echo "    Copying Socials to Uploads"
        for i in */; do
            cd "./$i/_Motions"
            copyMotions "$1"
            cd ..
            cd "./_Images"
            copyImages "$1"
            cd ..
            copyPSD "$1"
            cd ..
        done
        cd ..
    }
    WBProcessor () {
        cd "./04_Worship Background/_Motions"
        echo "    Generating Thumbs..."
        thumbs "$wbFrame" "_HD"
        echo "    Copying Motions to Uploads..."
            #copyMotions "$1"
        cd ../../
    }
    CDProcessor () {
        cd "./05_Countdown & Trivia/_Motions"
        echo "    Generating Thumbs..."
        thumbs "$cdFrame" "_HD"
        echo "    Copying Motions to Uploads..."
            compressMotions "$1"
        cd ../../
    }
    BumperProcessor () {
        cd "./06_Bumper/_Motions"
        echo "    Generating Thumbs..."
        thumbs "$bpFrame" "_HD"
        echo "    Copying Motions to Uploads..."
            copyMotions "$1"
        cd ../../
    }
#

lookProcessor () {
    ${scriptPath}checkFiles
    echo -e "\e[1;37m "
    read -p "    Press enter to continue or CTRL-C to cancel"
    clear
    #echo "  Processing Titles..."
    #titleProcessor "$1"
    #echo "  Processing Socials..."
    #socialProcessor "$1"
    #echo "  Processing Worship Backgrounds..."
    WBProcessor "$1"
    #echo "  Processing Countdowns & Trivia..."
    #CDProcessor "$1"
    #echo "  Processing Bumper..."
    #BumperProcessor "$1"
}

echo "test"

if [[ "$oneLook" == *"FALSE"* ]]; then
    echo "runloop"
    printf '%s\n' "${looksArray[@]}"
    for i in */; do
        if [[ "$i" != *"00_"* ]]; then
            cd "./$i"
            echo "Processing Look Variation '$i'..."
            lookProcessor "${projName}_${i}"
            cd ..
        fi
    done
else
    echo "Processing ${projName%"_MASTER"} Collection"
    echo "  Checking Resolutions and FileNames..."
    lookProcessor "$projName"
fi